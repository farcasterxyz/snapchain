syntax = "proto3";
package rpc;

import "message.proto";
import "blocks.proto";
import "hub_event.proto";

message BlocksRequest {
  uint32 shard_id = 1;
  uint64 start_block_number = 2;
  optional uint64 stop_block_number = 3;
}

message ShardChunksRequest {
  uint32 shard_id = 1;
  uint64 start_block_number = 2;
  optional uint64 stop_block_number = 3;
}

message ShardChunksResponse {
  repeated snapchain.ShardChunk shard_chunks = 1;
}

message SubscribeRequest {
  repeated hub_event.HubEventType event_types = 1;
  optional uint64 from_id = 2;
  optional uint64 fid_partitions = 3;
  optional uint64 fid_partition_index = 4;
  optional uint32 shard_index = 5;
}

service HubService {
  rpc SubmitMessage(msg.Message) returns (msg.Message);
  rpc GetBlocks(BlocksRequest) returns (stream snapchain.Block);
  rpc GetShardChunks(ShardChunksRequest) returns (ShardChunksResponse);
  rpc Subscribe(SubscribeRequest) returns (stream hub_event.HubEvent);
};
